{"version":3,"sources":["data/fetchText.js","components/StyledHeader.js","components/Header.js","components/StyledForm.js","components/Form.js","components/Story.js","components/App.js","index.js"],"names":["fetchText","fetch","then","response","json","StyledHeader","styled","header","Header","className","StyledForm","form","Form","props","blanks","handleUserInput","userInput","formSubmitHandler","errorIds","map","blank","index","htmlFor","key","includes","type","onChange","id","value","onClick","Story","console","log","fullStory","title","story","element","Fragment","App","useState","madlibs","setMadlibs","setUserInput","setErrorIds","formIsValid","setFormIsValid","useEffect","data","prevUserInput","Object","values","event","target","preventDefault","newList","push","length","ReactDOM","render","document","getElementById"],"mappings":"qOAKeA,EALG,WAChB,OAAOC,MACL,+DACAC,MAAK,SAACC,GAAD,OAAcA,EAASC,W,sVCDzB,IAAMC,EAAeC,IAAOC,OAAV,KCUVC,MATf,WACE,OACE,kBAACH,EAAD,KACE,wBAAII,UAAU,gBAAd,iBACA,uBAAGA,UAAU,eAAb,+B,oHCLC,IAAMC,EAAaJ,IAAOK,KAAV,KCiDRC,MAhDf,SAAcC,GAAO,IAGjBC,EAKED,EALFC,OACAC,EAIEF,EAJFE,gBACAC,EAGEH,EAHFG,UACAC,EAEEJ,EAFFI,kBACAC,EACEL,EADFK,SAGF,OACE,kBAACR,EAAD,KACE,oCACGI,EACGA,EAAOK,KAAI,SAACC,EAAOC,GACjB,OACE,2BACEC,QAAO,UAAKD,EAAL,YAAcD,GACrBG,IAAKF,EACLZ,UAAS,qBACPS,EAASM,SAAT,UAAqBH,EAArB,YAA8BD,IAAW,aAAe,KAGzDA,EACD,2BACEK,KAAK,OACLhB,UAAU,aACViB,SAAUX,EACVY,GAAE,UAAKN,EAAL,YAAcD,GAChBQ,MAAOZ,EAAUI,KAGnB,0BAAMX,UAAU,SAAhB,UAIN,GACJ,2BACEgB,KAAK,SACLG,MAAM,SACNC,QAASZ,EACTR,UAAU,0BCpBLqB,MAtBf,SAAejB,GACbkB,QAAQC,IAAInB,GADQ,IAGhBoB,EADIC,EAA4BrB,EAA5BqB,MAAOC,EAAqBtB,EAArBsB,MAAOnB,EAAcH,EAAdG,UAYtB,OATAiB,EAAYE,EAAMhB,KAAI,SAACiB,EAASf,GAC9B,OACE,kBAAC,IAAMgB,SAAP,CAAgBd,IAAKF,GAArB,UACMe,EADN,KAEE,0BAAM3B,UAAU,cAAhB,IAA+BO,EAAUK,QAM7C,yBAAKZ,UAAU,cACb,wBAAIA,UAAU,eAAeyB,GAC7B,2BAAID,GAAwB,WCuDnBK,MApEf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEqBF,mBAAS,IAF9B,mBAENvB,EAFM,KAEK0B,EAFL,OAGmBH,mBAAS,IAH5B,mBAGNrB,EAHM,KAGIyB,EAHJ,OAIyBJ,oBAAS,GAJlC,mBAINK,EAJM,KAIOC,EAJP,KA8Cb,OAxCAC,qBAAU,WAKR9C,IAAYE,MAAK,SAAC6C,GAChBN,EAAW,eAAKM,IAEhBA,EAAKjC,OAAOK,KAAI,SAACC,EAAOC,GAAR,OACdqB,GAAa,SAACM,GAAD,mBAAC,eACTA,GADQ,4BAEP3B,EAFO,YAEED,GAAU,gBAT5B,IAuCD,kBAAC,IAAMiB,SAAP,KACE,kBAAC,EAAD,MACEO,EASA,kBAAC,EAAD,CACE5B,UAAWiC,OAAOC,OAAOlC,GACzBmB,MAAOK,EAAQZ,MACfM,MAAOM,EAAQN,QAXjB,kBAAC,EAAD,CACEpB,OAAQ0B,EAAQ1B,OAChBC,gBA7BR,SAAyBoC,GACvB,IAAM5B,EAAM4B,EAAMC,OAAOzB,GACnBC,EAAQuB,EAAMC,OAAOxB,MAC3Bc,EAAa,2BAAK1B,GAAN,kBAAkBO,EAAMK,MA2B9BZ,UAAWA,EACXC,kBAzBR,SAA2BkC,GACzBA,EAAME,iBAEN,IAAIC,EAAU,GACd,IAAK,IAAM/B,KAAOP,EACO,KAAnBA,EAAUO,IACZ+B,EAAQC,KAAKhC,GAGjBoB,EAAY,GAAD,OAAKW,IAGO,IAAnBA,EAAQE,QACVX,GAAe,IAaX3B,SAAUA,M,QCvDpBuC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5f4c59b5.chunk.js","sourcesContent":["const fetchText = () => {\r\n  return fetch(\r\n    \"//madlibz.herokuapp.com/api/random?minlength=5&maxlength=25\"\r\n  ).then((response) => response.json());\r\n};\r\nexport default fetchText;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-transform: capitalize;\r\n  padding: 0 15px 25px;\r\n  background-color: lightgrey;\r\n  font-family: Courier;\r\n  & > .header-title {\r\n    color: green;\r\n  }\r\n  & > .header-text {\r\n    font-style: italic;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledHeader } from \"./StyledHeader\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <StyledHeader>\r\n      <h1 className=\"header-title\">silly stories</h1>\r\n      <p className=\"header-text\">mad libs story generator </p>\r\n    </StyledHeader>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledForm } from \"./StyledForm\";\r\n\r\nfunction Form(props) {\r\n  //   console.log(props);\r\n  const {\r\n    blanks,\r\n    handleUserInput,\r\n    userInput,\r\n    formSubmitHandler,\r\n    errorIds,\r\n  } = props;\r\n\r\n  return (\r\n    <StyledForm>\r\n      <>\r\n        {blanks\r\n          ? blanks.map((blank, index) => {\r\n              return (\r\n                <label\r\n                  htmlFor={`${index}-${blank}`}\r\n                  key={index}\r\n                  className={`form-label ${\r\n                    errorIds.includes(`${index}-${blank}`) ? \"show-alert\" : \"\"\r\n                  }`}\r\n                >\r\n                  {blank}\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    onChange={handleUserInput}\r\n                    id={`${index}-${blank}`}\r\n                    value={userInput[blank]}\r\n                  />\r\n\r\n                  <span className=\"alert\">**</span>\r\n                </label>\r\n              );\r\n            })\r\n          : \"\"}\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          onClick={formSubmitHandler}\r\n          className=\"form-submit button\"\r\n        />\r\n      </>\r\n    </StyledForm>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction Story(props) {\r\n  console.log(props);\r\n  const { title, story, userInput } = props;\r\n  let fullStory;\r\n\r\n  fullStory = story.map((element, index) => {\r\n    return (\r\n      <React.Fragment key={index}>\r\n        {`${element} `}\r\n        <span className=\"user-input\"> {userInput[index]}</span>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"story-page\">\r\n      <h2 className=\"story-title\">{title}</h2>\r\n      <p>{fullStory ? fullStory : \"story\"}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Story;\r\n","import React, { useEffect, useState } from \"react\";\nimport fetchText from \"../data/fetchText\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport Story from \"./Story\";\n\nfunction App() {\n  const [madlibs, setMadlibs] = useState({});\n  const [userInput, setUserInput] = useState({});\n  const [errorIds, setErrorIds] = useState([]);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function getData() {\n    fetchText().then((data) => {\n      setMadlibs({ ...data });\n\n      data.blanks.map((blank, index) =>\n        setUserInput((prevUserInput) => ({\n          ...prevUserInput,\n          [`${index}-${blank}`]: \"\",\n        }))\n      );\n    });\n  }\n  //save user input\n  function handleUserInput(event) {\n    const key = event.target.id;\n    const value = event.target.value;\n    setUserInput({ ...userInput, [key]: value });\n  }\n\n  function formSubmitHandler(event) {\n    event.preventDefault();\n    //show missing data alerts\n    let newList = [];\n    for (const key in userInput) {\n      if (userInput[key] === \"\") {\n        newList.push(key);\n      }\n    }\n    setErrorIds([...newList]);\n\n    //validate form\n    if (newList.length === 0) {\n      setFormIsValid(true);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Header />\n      {!formIsValid ? (\n        <Form\n          blanks={madlibs.blanks}\n          handleUserInput={handleUserInput}\n          userInput={userInput}\n          formSubmitHandler={formSubmitHandler}\n          errorIds={errorIds}\n        />\n      ) : (\n        <Story\n          userInput={Object.values(userInput)}\n          story={madlibs.value}\n          title={madlibs.title}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}